### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CreateUserInput {
  email: String
  password: String
  role: Role!
}

input CreateUserLogin {
  email: String
  password: String
}

type Mutation {
  changePassword(password: String, token: String): User!
  createProperty: Property!
  deleteUser(user: UserWhereUniqueInput!): User!
  forgotPassword(email: String): Boolean!
  login(user: CreateUserLogin!): User!
  logout: Boolean!
  register(user: CreateUserInput!): User!
  updateUser(user: CreateUserInput!, user_id: UserWhereUniqueInput!): User
}

type Property {
  address: String!
  address_2: String!
  city: String!
  country: String!
  id: ID!
  name: String!
  primary_phone_number: String!
  state: String!
  zip: String!
}

type Query {
  getSelf: User
  getUser(where: UserWhereUniqueInput!): User
  getUserByEmail(user: UserWhereUniqueInputEmail!): User
  getUsers: [User]!
}

"""User Roles"""
enum Role {
  Owner
  Superintendent
  Tenant
}

type User {
  email: String!
  id: ID!
  role: String!
}

input UserWhereUniqueInput {
  id: ID!
}

input UserWhereUniqueInputEmail {
  email: String
}